// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Hammad887/chat-app/gen/models"
)

// SendMessageCreatedCode is the HTTP code returned for type SendMessageCreated
const SendMessageCreatedCode int = 201

/*
SendMessageCreated successfully save user object into database

swagger:response sendMessageCreated
*/
type SendMessageCreated struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessResponse `json:"body,omitempty"`
}

// NewSendMessageCreated creates SendMessageCreated with default headers values
func NewSendMessageCreated() *SendMessageCreated {

	return &SendMessageCreated{}
}

// WithPayload adds the payload to the send message created response
func (o *SendMessageCreated) WithPayload(payload *models.SuccessResponse) *SendMessageCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send message created response
func (o *SendMessageCreated) SetPayload(payload *models.SuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendMessageCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SendMessageUnauthorizedCode is the HTTP code returned for type SendMessageUnauthorized
const SendMessageUnauthorizedCode int = 401

/*
SendMessageUnauthorized Unauthorized

swagger:response sendMessageUnauthorized
*/
type SendMessageUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSendMessageUnauthorized creates SendMessageUnauthorized with default headers values
func NewSendMessageUnauthorized() *SendMessageUnauthorized {

	return &SendMessageUnauthorized{}
}

// WithPayload adds the payload to the send message unauthorized response
func (o *SendMessageUnauthorized) WithPayload(payload *models.Error) *SendMessageUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send message unauthorized response
func (o *SendMessageUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendMessageUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SendMessageConflictCode is the HTTP code returned for type SendMessageConflict
const SendMessageConflictCode int = 409

/*
SendMessageConflict Conflict

swagger:response sendMessageConflict
*/
type SendMessageConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSendMessageConflict creates SendMessageConflict with default headers values
func NewSendMessageConflict() *SendMessageConflict {

	return &SendMessageConflict{}
}

// WithPayload adds the payload to the send message conflict response
func (o *SendMessageConflict) WithPayload(payload *models.Error) *SendMessageConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send message conflict response
func (o *SendMessageConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendMessageConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
SendMessageDefault Internal Server Error

swagger:response sendMessageDefault
*/
type SendMessageDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSendMessageDefault creates SendMessageDefault with default headers values
func NewSendMessageDefault(code int) *SendMessageDefault {
	if code <= 0 {
		code = 500
	}

	return &SendMessageDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the send message default response
func (o *SendMessageDefault) WithStatusCode(code int) *SendMessageDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the send message default response
func (o *SendMessageDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the send message default response
func (o *SendMessageDefault) WithPayload(payload *models.Error) *SendMessageDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send message default response
func (o *SendMessageDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendMessageDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
