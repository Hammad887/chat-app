// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ChatRoomHandlerFunc turns a function with the right signature into a chat room handler
type ChatRoomHandlerFunc func(ChatRoomParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ChatRoomHandlerFunc) Handle(params ChatRoomParams) middleware.Responder {
	return fn(params)
}

// ChatRoomHandler interface for that can handle valid chat room params
type ChatRoomHandler interface {
	Handle(ChatRoomParams) middleware.Responder
}

// NewChatRoom creates a new http.Handler for the chat room operation
func NewChatRoom(ctx *middleware.Context, handler ChatRoomHandler) *ChatRoom {
	return &ChatRoom{Context: ctx, Handler: handler}
}

/*
	ChatRoom swagger:route POST /createChatRoom service chatRoom

Creates a new chatroom with the provide name
*/
type ChatRoom struct {
	Context *middleware.Context
	Handler ChatRoomHandler
}

func (o *ChatRoom) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewChatRoomParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
