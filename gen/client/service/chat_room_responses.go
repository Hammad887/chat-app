// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Hammad887/chat-app/gen/models"
)

// ChatRoomReader is a Reader for the ChatRoom structure.
type ChatRoomReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChatRoomReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChatRoomOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewChatRoomBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewChatRoomNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewChatRoomInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /createChatRoom] ChatRoom", response, response.Code())
	}
}

// NewChatRoomOK creates a ChatRoomOK with default headers values
func NewChatRoomOK() *ChatRoomOK {
	return &ChatRoomOK{}
}

/*
ChatRoomOK describes a response with status code 200, with default header values.

Successful created a chatroom
*/
type ChatRoomOK struct {
	Payload *models.ChatroomSuccess
}

// IsSuccess returns true when this chat room o k response has a 2xx status code
func (o *ChatRoomOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this chat room o k response has a 3xx status code
func (o *ChatRoomOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this chat room o k response has a 4xx status code
func (o *ChatRoomOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this chat room o k response has a 5xx status code
func (o *ChatRoomOK) IsServerError() bool {
	return false
}

// IsCode returns true when this chat room o k response a status code equal to that given
func (o *ChatRoomOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the chat room o k response
func (o *ChatRoomOK) Code() int {
	return 200
}

func (o *ChatRoomOK) Error() string {
	return fmt.Sprintf("[POST /createChatRoom][%d] chatRoomOK  %+v", 200, o.Payload)
}

func (o *ChatRoomOK) String() string {
	return fmt.Sprintf("[POST /createChatRoom][%d] chatRoomOK  %+v", 200, o.Payload)
}

func (o *ChatRoomOK) GetPayload() *models.ChatroomSuccess {
	return o.Payload
}

func (o *ChatRoomOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChatroomSuccess)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChatRoomBadRequest creates a ChatRoomBadRequest with default headers values
func NewChatRoomBadRequest() *ChatRoomBadRequest {
	return &ChatRoomBadRequest{}
}

/*
ChatRoomBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ChatRoomBadRequest struct {
}

// IsSuccess returns true when this chat room bad request response has a 2xx status code
func (o *ChatRoomBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this chat room bad request response has a 3xx status code
func (o *ChatRoomBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this chat room bad request response has a 4xx status code
func (o *ChatRoomBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this chat room bad request response has a 5xx status code
func (o *ChatRoomBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this chat room bad request response a status code equal to that given
func (o *ChatRoomBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the chat room bad request response
func (o *ChatRoomBadRequest) Code() int {
	return 400
}

func (o *ChatRoomBadRequest) Error() string {
	return fmt.Sprintf("[POST /createChatRoom][%d] chatRoomBadRequest ", 400)
}

func (o *ChatRoomBadRequest) String() string {
	return fmt.Sprintf("[POST /createChatRoom][%d] chatRoomBadRequest ", 400)
}

func (o *ChatRoomBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChatRoomNotFound creates a ChatRoomNotFound with default headers values
func NewChatRoomNotFound() *ChatRoomNotFound {
	return &ChatRoomNotFound{}
}

/*
ChatRoomNotFound describes a response with status code 404, with default header values.

User not found
*/
type ChatRoomNotFound struct {
	Payload string
}

// IsSuccess returns true when this chat room not found response has a 2xx status code
func (o *ChatRoomNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this chat room not found response has a 3xx status code
func (o *ChatRoomNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this chat room not found response has a 4xx status code
func (o *ChatRoomNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this chat room not found response has a 5xx status code
func (o *ChatRoomNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this chat room not found response a status code equal to that given
func (o *ChatRoomNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the chat room not found response
func (o *ChatRoomNotFound) Code() int {
	return 404
}

func (o *ChatRoomNotFound) Error() string {
	return fmt.Sprintf("[POST /createChatRoom][%d] chatRoomNotFound  %+v", 404, o.Payload)
}

func (o *ChatRoomNotFound) String() string {
	return fmt.Sprintf("[POST /createChatRoom][%d] chatRoomNotFound  %+v", 404, o.Payload)
}

func (o *ChatRoomNotFound) GetPayload() string {
	return o.Payload
}

func (o *ChatRoomNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChatRoomInternalServerError creates a ChatRoomInternalServerError with default headers values
func NewChatRoomInternalServerError() *ChatRoomInternalServerError {
	return &ChatRoomInternalServerError{}
}

/*
ChatRoomInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type ChatRoomInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this chat room internal server error response has a 2xx status code
func (o *ChatRoomInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this chat room internal server error response has a 3xx status code
func (o *ChatRoomInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this chat room internal server error response has a 4xx status code
func (o *ChatRoomInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this chat room internal server error response has a 5xx status code
func (o *ChatRoomInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this chat room internal server error response a status code equal to that given
func (o *ChatRoomInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the chat room internal server error response
func (o *ChatRoomInternalServerError) Code() int {
	return 500
}

func (o *ChatRoomInternalServerError) Error() string {
	return fmt.Sprintf("[POST /createChatRoom][%d] chatRoomInternalServerError  %+v", 500, o.Payload)
}

func (o *ChatRoomInternalServerError) String() string {
	return fmt.Sprintf("[POST /createChatRoom][%d] chatRoomInternalServerError  %+v", 500, o.Payload)
}

func (o *ChatRoomInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *ChatRoomInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
