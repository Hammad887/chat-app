// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAllChatroomsHandlerFunc turns a function with the right signature into a get all chatrooms handler
type GetAllChatroomsHandlerFunc func(GetAllChatroomsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAllChatroomsHandlerFunc) Handle(params GetAllChatroomsParams) middleware.Responder {
	return fn(params)
}

// GetAllChatroomsHandler interface for that can handle valid get all chatrooms params
type GetAllChatroomsHandler interface {
	Handle(GetAllChatroomsParams) middleware.Responder
}

// NewGetAllChatrooms creates a new http.Handler for the get all chatrooms operation
func NewGetAllChatrooms(ctx *middleware.Context, handler GetAllChatroomsHandler) *GetAllChatrooms {
	return &GetAllChatrooms{Context: ctx, Handler: handler}
}

/*
	GetAllChatrooms swagger:route GET /chatrooms service getAllChatrooms

fetch all chatrooms base on filter
*/
type GetAllChatrooms struct {
	Context *middleware.Context
	Handler GetAllChatroomsHandler
}

func (o *GetAllChatrooms) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAllChatroomsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
