// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Hammad887/chat-app/docs/models"
)

// SendMessageReader is a Reader for the SendMessage structure.
type SendMessageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendMessageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSendMessageCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSendMessageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSendMessageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSendMessageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSendMessageCreated creates a SendMessageCreated with default headers values
func NewSendMessageCreated() *SendMessageCreated {
	return &SendMessageCreated{}
}

/*
SendMessageCreated describes a response with status code 201, with default header values.

successfully save user object into database
*/
type SendMessageCreated struct {
	Payload *models.SuccessResponse
}

// IsSuccess returns true when this send message created response has a 2xx status code
func (o *SendMessageCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this send message created response has a 3xx status code
func (o *SendMessageCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send message created response has a 4xx status code
func (o *SendMessageCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this send message created response has a 5xx status code
func (o *SendMessageCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this send message created response a status code equal to that given
func (o *SendMessageCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the send message created response
func (o *SendMessageCreated) Code() int {
	return 201
}

func (o *SendMessageCreated) Error() string {
	return fmt.Sprintf("[POST /chatrooms/{chatroom_id}/messages][%d] sendMessageCreated  %+v", 201, o.Payload)
}

func (o *SendMessageCreated) String() string {
	return fmt.Sprintf("[POST /chatrooms/{chatroom_id}/messages][%d] sendMessageCreated  %+v", 201, o.Payload)
}

func (o *SendMessageCreated) GetPayload() *models.SuccessResponse {
	return o.Payload
}

func (o *SendMessageCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendMessageUnauthorized creates a SendMessageUnauthorized with default headers values
func NewSendMessageUnauthorized() *SendMessageUnauthorized {
	return &SendMessageUnauthorized{}
}

/*
SendMessageUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SendMessageUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this send message unauthorized response has a 2xx status code
func (o *SendMessageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this send message unauthorized response has a 3xx status code
func (o *SendMessageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send message unauthorized response has a 4xx status code
func (o *SendMessageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this send message unauthorized response has a 5xx status code
func (o *SendMessageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this send message unauthorized response a status code equal to that given
func (o *SendMessageUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the send message unauthorized response
func (o *SendMessageUnauthorized) Code() int {
	return 401
}

func (o *SendMessageUnauthorized) Error() string {
	return fmt.Sprintf("[POST /chatrooms/{chatroom_id}/messages][%d] sendMessageUnauthorized  %+v", 401, o.Payload)
}

func (o *SendMessageUnauthorized) String() string {
	return fmt.Sprintf("[POST /chatrooms/{chatroom_id}/messages][%d] sendMessageUnauthorized  %+v", 401, o.Payload)
}

func (o *SendMessageUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SendMessageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendMessageConflict creates a SendMessageConflict with default headers values
func NewSendMessageConflict() *SendMessageConflict {
	return &SendMessageConflict{}
}

/*
SendMessageConflict describes a response with status code 409, with default header values.

Conflict
*/
type SendMessageConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this send message conflict response has a 2xx status code
func (o *SendMessageConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this send message conflict response has a 3xx status code
func (o *SendMessageConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send message conflict response has a 4xx status code
func (o *SendMessageConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this send message conflict response has a 5xx status code
func (o *SendMessageConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this send message conflict response a status code equal to that given
func (o *SendMessageConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the send message conflict response
func (o *SendMessageConflict) Code() int {
	return 409
}

func (o *SendMessageConflict) Error() string {
	return fmt.Sprintf("[POST /chatrooms/{chatroom_id}/messages][%d] sendMessageConflict  %+v", 409, o.Payload)
}

func (o *SendMessageConflict) String() string {
	return fmt.Sprintf("[POST /chatrooms/{chatroom_id}/messages][%d] sendMessageConflict  %+v", 409, o.Payload)
}

func (o *SendMessageConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *SendMessageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendMessageDefault creates a SendMessageDefault with default headers values
func NewSendMessageDefault(code int) *SendMessageDefault {
	return &SendMessageDefault{
		_statusCode: code,
	}
}

/*
SendMessageDefault describes a response with status code -1, with default header values.

Internal Server Error
*/
type SendMessageDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this send message default response has a 2xx status code
func (o *SendMessageDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this send message default response has a 3xx status code
func (o *SendMessageDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this send message default response has a 4xx status code
func (o *SendMessageDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this send message default response has a 5xx status code
func (o *SendMessageDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this send message default response a status code equal to that given
func (o *SendMessageDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the send message default response
func (o *SendMessageDefault) Code() int {
	return o._statusCode
}

func (o *SendMessageDefault) Error() string {
	return fmt.Sprintf("[POST /chatrooms/{chatroom_id}/messages][%d] sendMessage default  %+v", o._statusCode, o.Payload)
}

func (o *SendMessageDefault) String() string {
	return fmt.Sprintf("[POST /chatrooms/{chatroom_id}/messages][%d] sendMessage default  %+v", o._statusCode, o.Payload)
}

func (o *SendMessageDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *SendMessageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
